{"title":"7 Sorting Algorithms in a Few Lines","content":"So we will start it from the simplest ones to the hardest ones. Bubble Sort private static void bubbleSort(int[] v) { int i, j, n = v.length; for (i = 0; i v[j]) { swap(v, i, j); } } } } Selection Sort private static void selectionSort(int[] v) { int i, j, min, n = v.length; for (i = 0; i v[j]) min = j; } swap(v, min, i); } } Insertion Sort private static void insertionSort(int[] v) { int i, j, temp, n = v.length; for (i = 1; i = 0 && v[j] temp) { v[j + 1] = v[j]; j--; } v[j + 1] = temp; } } Shell Sort private static void shellSort(int[] v) { int n = v.length; int range = n / 2; int i, j, temp; int gap; while (range 0) { for (i = range; i = range && v[gap] temp) { v[j] = v[gap]; j -= range; gap = j - range; } v[j] = temp; } range /= 2; } } Heap Sort private static void heapify(int[] v, int pos, int n) { int low = 2 * pos + 1; int high = 2 * pos + 2; int largest, temp; if (low v[pos]) largest = low; else largest = pos; if (high v[largest]) largest = high; if (largest != pos) { temp = v[largest]; v[largest] = v[pos]; v[pos] = temp; heapify(v, largest, n); } } private static void heapSort(int[] v) { int n = v.length, i; int low = n / 2 - 1, high = n - 1; // Build initial heap for (i = low; i = 0; i--) { heapify(v, i, n); } for (i = high; i 0; i--) { swap(v, 0, i); heapify(v, 0, i); } } Quick Sort // Start with quickSort(v, 0, v.length - 1); private static int i; private static int j; private static void partition(int[] v, int low, int high) { i = low; j = high; int x = v[(i + j) / 2]; while (i x) j--; if (i i) quickSort(v, i, high); } Merge Sort // Start with mergeSort(v, 0, v.length - 1); private static void merge(int[] v, int low, int middle, int high) { int[] vAux = new int[v.length]; for (int i = low; i Swap Method private static void swap(int[] v, int i, int j) { int temp = v[i]; v[i] = v[j]; v[j] = temp; }","path":"7-sorting-algorithms-in-a-few-lines","image":"http://i.imgur.com/yEK4JxE.png","released":true,"date":"2013-10-04T00:57:07.000Z","github":"https://github.com/LeonardoCardoso/Sorting-Algorithms","tags":["sorting","sort","Java","algorithm"]}