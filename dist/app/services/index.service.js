"use strict";var __decorate=this&&this.__decorate||function(t,e,r,i){var n,o=arguments.length,c=o<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(t,e,r,i);else for(var a=t.length-1;a>=0;a--)(n=t[a])&&(c=(o<3?n(c):o>3?n(e,r,c):n(e,r))||c);return o>3&&c&&Object.defineProperty(e,r,c),c},__metadata=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},core_1=require("@angular/core"),http_1=require("@angular/http"),search_service_1=require("./search.service"),Rx_1=require("rxjs/Rx"),IndexService=function(){function t(t,e){var r=this;this._http=t,this._searchService=e,this.fullData=[],this.after=function(){},this._http.get("indexes/full.json").map(function(t){return t.json()}).subscribe(function(t){r.fullData=t,r.after()})}return t.prototype.select=function(t,e,r,i){void 0===e&&(e=""),void 0===i&&(i=!0),t(""===e?[]:"home"===e?this.fullData:this._searchService.perform(this.fullData,e,r,i))},t.prototype.search=function(t,e){void 0===e&&(e=""),this.select(t,e,["title","content"])},t.prototype.filter=function(t,e){void 0===e&&(e=""),this.select(t,e,["label"],!1)},t.prototype.tag=function(t,e){this.select(t,e,["tags"],!1)},t.prototype.activities=function(t){this._http.get("indexes/activities.json").map(function(t){return t.json()}).subscribe(t)},t.prototype.getPost=function(t,e){return Rx_1.Observable.forkJoin(this._http.get(t+"/"+e+"/content.json").map(function(t){return t.json()}),this._http.get(t+"/"+e+"/CONTENT.md"))},t=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[http_1.Http,search_service_1.SearchService])],t)}();exports.IndexService=IndexService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2luZGV4LnNlcnZpY2UuanMiXSwibmFtZXMiOlsiX19kZWNvcmF0ZSIsInRoaXMiLCJkZWNvcmF0b3JzIiwidGFyZ2V0Iiwia2V5IiwiZGVzYyIsImQiLCJjIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsIk9iamVjdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsImkiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fbWV0YWRhdGEiLCJrIiwidiIsIm1ldGFkYXRhIiwiY29yZV8xIiwicmVxdWlyZSIsImh0dHBfMSIsInNlYXJjaF9zZXJ2aWNlXzEiLCJSeF8xIiwiSW5kZXhTZXJ2aWNlIiwiX2h0dHAiLCJfc2VhcmNoU2VydmljZSIsIl90aGlzIiwiZnVsbERhdGEiLCJhZnRlciIsImdldCIsIm1hcCIsInJlcyIsImpzb24iLCJzdWJzY3JpYmUiLCJwcm90b3R5cGUiLCJzZWxlY3QiLCJjYWxsYmFjayIsIm5lZWRsZSIsImZpZWxkcyIsImhpZ2h0bGlnaHQiLCJwZXJmb3JtIiwic2VhcmNoIiwiZmlsdGVyIiwibGFiZWwiLCJ0YWciLCJhY3Rpdml0aWVzIiwiZ2V0UG9zdCIsInNlY3Rpb24iLCJwYXRoIiwiT2JzZXJ2YWJsZSIsImZvcmtKb2luIiwiSW5qZWN0YWJsZSIsIkh0dHAiLCJTZWFyY2hTZXJ2aWNlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFDQSxJQUFJQSxZQUFjQyxNQUFRQSxLQUFLRCxZQUFlLFNBQVVFLEVBQVlDLEVBQVFDLEVBQUtDLEdBQzdFLEdBQTJIQyxHQUF2SEMsRUFBSUMsVUFBVUMsT0FBUUMsRUFBSUgsRUFBSSxFQUFJSixFQUFrQixPQUFURSxFQUFnQkEsRUFBT00sT0FBT0MseUJBQXlCVCxFQUFRQyxHQUFPQyxDQUNySCxJQUF1QixnQkFBWlEsVUFBb0Qsa0JBQXJCQSxTQUFRQyxTQUF5QkosRUFBSUcsUUFBUUMsU0FBU1osRUFBWUMsRUFBUUMsRUFBS0MsT0FDcEgsS0FBSyxHQUFJVSxHQUFJYixFQUFXTyxPQUFTLEVBQUdNLEdBQUssRUFBR0EsS0FBU1QsRUFBSUosRUFBV2EsTUFBSUwsR0FBS0gsRUFBSSxFQUFJRCxFQUFFSSxHQUFLSCxFQUFJLEVBQUlELEVBQUVILEVBQVFDLEVBQUtNLEdBQUtKLEVBQUVILEVBQVFDLEtBQVNNLEVBQ2hKLE9BQU9ILEdBQUksR0FBS0csR0FBS0MsT0FBT0ssZUFBZWIsRUFBUUMsRUFBS00sR0FBSUEsR0FFNURPLFdBQWNoQixNQUFRQSxLQUFLZ0IsWUFBZSxTQUFVQyxFQUFHQyxHQUN2RCxHQUF1QixnQkFBWk4sVUFBb0Qsa0JBQXJCQSxTQUFRTyxTQUF5QixNQUFPUCxTQUFRTyxTQUFTRixFQUFHQyxJQUV0R0UsT0FBU0MsUUFBUSxpQkFDakJDLE9BQVNELFFBQVEsaUJBQ2pCRSxpQkFBbUJGLFFBQVEsb0JBQzNCRyxLQUFPSCxRQUFRLFdBQ2ZJLGFBQWdCLFdBQ2hCLFFBQVNBLEdBQWFDLEVBQU9DLEdBQ3pCLEdBQUlDLEdBQVE1QixJQUNaQSxNQUFLMEIsTUFBUUEsRUFDYjFCLEtBQUsyQixlQUFpQkEsRUFDdEIzQixLQUFLNkIsWUFDTDdCLEtBQUs4QixNQUFRLGFBQ2I5QixLQUFLMEIsTUFBTUssSUFBSSxxQkFDVkMsSUFBSSxTQUFVQyxHQUFPLE1BQU9BLEdBQUlDLFNBQ2hDQyxVQUFVLFNBQVVGLEdBQ3JCTCxFQUFNQyxTQUFXSSxFQUNqQkwsRUFBTUUsVUF1Q2QsTUFwQ0FMLEdBQWFXLFVBQVVDLE9BQVMsU0FBVUMsRUFBVUMsRUFBUUMsRUFBUUMsR0FDakQsU0FBWEYsSUFBcUJBLEVBQVMsSUFDZixTQUFmRSxJQUF5QkEsR0FBYSxHQUV0Q0gsRUFEVyxLQUFYQyxLQUdnQixTQUFYQSxFQUNJdkMsS0FBSzZCLFNBR0w3QixLQUFLMkIsZUFBZWUsUUFBUTFDLEtBQUs2QixTQUFVVSxFQUFRQyxFQUFRQyxLQUc1RWhCLEVBQWFXLFVBQVVPLE9BQVMsU0FBVUwsRUFBVUMsR0FDakMsU0FBWEEsSUFBcUJBLEVBQVMsSUFDbEN2QyxLQUFLcUMsT0FBT0MsRUFBVUMsR0FBUyxRQUFTLGFBRTVDZCxFQUFhVyxVQUFVUSxPQUFTLFNBQVVOLEVBQVVPLEdBQ2xDLFNBQVZBLElBQW9CQSxFQUFRLElBQ2hDN0MsS0FBS3FDLE9BQU9DLEVBQVVPLEdBQVEsVUFBVSxJQUU1Q3BCLEVBQWFXLFVBQVVVLElBQU0sU0FBVVIsRUFBVVEsR0FDN0M5QyxLQUFLcUMsT0FBT0MsRUFBVVEsR0FBTSxTQUFTLElBRXpDckIsRUFBYVcsVUFBVVcsV0FBYSxTQUFVVCxHQUMxQ3RDLEtBQUswQixNQUFNSyxJQUFJLDJCQUNWQyxJQUFJLFNBQVVDLEdBQU8sTUFBT0EsR0FBSUMsU0FDaENDLFVBQVVHLElBRW5CYixFQUFhVyxVQUFVWSxRQUFVLFNBQVVDLEVBQVNDLEdBQ2hELE1BQU8xQixNQUFLMkIsV0FBV0MsU0FBU3BELEtBQUswQixNQUFNSyxJQUFJa0IsRUFBVSxJQUFNQyxFQUFPLGlCQUFpQmxCLElBQUksU0FBVUMsR0FBTyxNQUFPQSxHQUFJQyxTQUFZbEMsS0FBSzBCLE1BQU1LLElBQUlrQixFQUFVLElBQU1DLEVBQU8saUJBRTdLekIsRUFBZTFCLFlBQ1hxQixPQUFPaUMsYUFDUHJDLFdBQVcscUJBQXNCTSxPQUFPZ0MsS0FBTS9CLGlCQUFpQmdDLGlCQUNoRTlCLEtBR1ArQixTQUFRL0IsYUFBZUEiLCJmaWxlIjoic2VydmljZXMvaW5kZXguc2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xudmFyIF9fbWV0YWRhdGEgPSAodGhpcyAmJiB0aGlzLl9fbWV0YWRhdGEpIHx8IGZ1bmN0aW9uIChrLCB2KSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKGssIHYpO1xufTtcbnZhciBjb3JlXzEgPSByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyk7XG52YXIgaHR0cF8xID0gcmVxdWlyZSgnQGFuZ3VsYXIvaHR0cCcpO1xudmFyIHNlYXJjaF9zZXJ2aWNlXzEgPSByZXF1aXJlKCcuL3NlYXJjaC5zZXJ2aWNlJyk7XG52YXIgUnhfMSA9IHJlcXVpcmUoJ3J4anMvUngnKTtcbnZhciBJbmRleFNlcnZpY2UgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEluZGV4U2VydmljZShfaHR0cCwgX3NlYXJjaFNlcnZpY2UpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5faHR0cCA9IF9odHRwO1xuICAgICAgICB0aGlzLl9zZWFyY2hTZXJ2aWNlID0gX3NlYXJjaFNlcnZpY2U7XG4gICAgICAgIHRoaXMuZnVsbERhdGEgPSBbXTtcbiAgICAgICAgdGhpcy5hZnRlciA9IGZ1bmN0aW9uICgpIHsgfTtcbiAgICAgICAgdGhpcy5faHR0cC5nZXQoJ2luZGV4ZXMvZnVsbC5qc29uJylcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHJlcykgeyByZXR1cm4gcmVzLmpzb24oKTsgfSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgX3RoaXMuZnVsbERhdGEgPSByZXM7XG4gICAgICAgICAgICBfdGhpcy5hZnRlcigpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgSW5kZXhTZXJ2aWNlLnByb3RvdHlwZS5zZWxlY3QgPSBmdW5jdGlvbiAoY2FsbGJhY2ssIG5lZWRsZSwgZmllbGRzLCBoaWdodGxpZ2h0KSB7XG4gICAgICAgIGlmIChuZWVkbGUgPT09IHZvaWQgMCkgeyBuZWVkbGUgPSBcIlwiOyB9XG4gICAgICAgIGlmIChoaWdodGxpZ2h0ID09PSB2b2lkIDApIHsgaGlnaHRsaWdodCA9IHRydWU7IH1cbiAgICAgICAgaWYgKG5lZWRsZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgY2FsbGJhY2soW10pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG5lZWRsZSA9PT0gXCJob21lXCIpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKHRoaXMuZnVsbERhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY2FsbGJhY2sodGhpcy5fc2VhcmNoU2VydmljZS5wZXJmb3JtKHRoaXMuZnVsbERhdGEsIG5lZWRsZSwgZmllbGRzLCBoaWdodGxpZ2h0KSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEluZGV4U2VydmljZS5wcm90b3R5cGUuc2VhcmNoID0gZnVuY3Rpb24gKGNhbGxiYWNrLCBuZWVkbGUpIHtcbiAgICAgICAgaWYgKG5lZWRsZSA9PT0gdm9pZCAwKSB7IG5lZWRsZSA9IFwiXCI7IH1cbiAgICAgICAgdGhpcy5zZWxlY3QoY2FsbGJhY2ssIG5lZWRsZSwgW1widGl0bGVcIiwgXCJjb250ZW50XCJdKTtcbiAgICB9O1xuICAgIEluZGV4U2VydmljZS5wcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24gKGNhbGxiYWNrLCBsYWJlbCkge1xuICAgICAgICBpZiAobGFiZWwgPT09IHZvaWQgMCkgeyBsYWJlbCA9IFwiXCI7IH1cbiAgICAgICAgdGhpcy5zZWxlY3QoY2FsbGJhY2ssIGxhYmVsLCBbXCJsYWJlbFwiXSwgZmFsc2UpO1xuICAgIH07XG4gICAgSW5kZXhTZXJ2aWNlLnByb3RvdHlwZS50YWcgPSBmdW5jdGlvbiAoY2FsbGJhY2ssIHRhZykge1xuICAgICAgICB0aGlzLnNlbGVjdChjYWxsYmFjaywgdGFnLCBbXCJ0YWdzXCJdLCBmYWxzZSk7XG4gICAgfTtcbiAgICBJbmRleFNlcnZpY2UucHJvdG90eXBlLmFjdGl2aXRpZXMgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5faHR0cC5nZXQoJ2luZGV4ZXMvYWN0aXZpdGllcy5qc29uJylcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHJlcykgeyByZXR1cm4gcmVzLmpzb24oKTsgfSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoY2FsbGJhY2spO1xuICAgIH07XG4gICAgSW5kZXhTZXJ2aWNlLnByb3RvdHlwZS5nZXRQb3N0ID0gZnVuY3Rpb24gKHNlY3Rpb24sIHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIFJ4XzEuT2JzZXJ2YWJsZS5mb3JrSm9pbih0aGlzLl9odHRwLmdldChzZWN0aW9uICsgJy8nICsgcGF0aCArIFwiL2NvbnRlbnQuanNvblwiKS5tYXAoZnVuY3Rpb24gKHJlcykgeyByZXR1cm4gcmVzLmpzb24oKTsgfSksIHRoaXMuX2h0dHAuZ2V0KHNlY3Rpb24gKyAnLycgKyBwYXRoICsgXCIvQ09OVEVOVC5tZFwiKSk7XG4gICAgfTtcbiAgICBJbmRleFNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgY29yZV8xLkluamVjdGFibGUoKSwgXG4gICAgICAgIF9fbWV0YWRhdGEoJ2Rlc2lnbjpwYXJhbXR5cGVzJywgW2h0dHBfMS5IdHRwLCBzZWFyY2hfc2VydmljZV8xLlNlYXJjaFNlcnZpY2VdKVxuICAgIF0sIEluZGV4U2VydmljZSk7XG4gICAgcmV0dXJuIEluZGV4U2VydmljZTtcbn0oKSk7XG5leHBvcnRzLkluZGV4U2VydmljZSA9IEluZGV4U2VydmljZTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
