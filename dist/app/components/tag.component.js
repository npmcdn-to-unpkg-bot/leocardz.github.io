"use strict";var __decorate=this&&this.__decorate||function(e,t,r,i){var a,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var c=e.length-1;c>=0;c--)(a=e[c])&&(o=(n<3?a(o):n>3?a(t,r,o):a(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},router_1=require("@angular/router"),core_1=require("@angular/core"),http_1=require("@angular/http"),angular2_moment_1=require("angular2-moment"),index_service_1=require("../services/index.service"),meta_service_1=require("../services/meta.service"),label_service_1=require("../services/label.service"),TagComponent=function(){function e(e,t,r,i,a){this._router=e,this._route=t,this._indexService=r,this._metaService=i,this._labelService=a,this.posts=[],this.tag="",this.tag=this._route.snapshot.params.tag,i.setData({title:this.tag,url:"/tag/"+this.tag})}return e.prototype.actionNavigate=function(e){this._router.navigate(["/"+e.label+"/"+e.path])},e.prototype.labelnize=function(e,t){return this._labelService.labelnize(e,t)},e.prototype.ngOnInit=function(){var e=this;this._indexService.fetch().map(function(e){return e.json()}).subscribe(function(t){e.posts=e._indexService.simplify(e._indexService.search(t,e.tag,["tags"],!1))})},e=__decorate([core_1.Component({moduleId:module.id,selector:"tab",templateUrl:"/dist/app/views/tag.component.html",directives:[router_1.ROUTER_DIRECTIVES],providers:[index_service_1.IndexService,label_service_1.LabelService,http_1.HTTP_PROVIDERS],pipes:[angular2_moment_1.TimeAgoPipe]}),__metadata("design:paramtypes",[router_1.Router,router_1.ActivatedRoute,index_service_1.IndexService,meta_service_1.MetaService,label_service_1.LabelService])],e)}();exports.TagComponent=TagComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdGFnLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6WyJfX2RlY29yYXRlIiwidGhpcyIsImRlY29yYXRvcnMiLCJ0YXJnZXQiLCJrZXkiLCJkZXNjIiwiZCIsImMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJyIiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiUmVmbGVjdCIsImRlY29yYXRlIiwiaSIsImRlZmluZVByb3BlcnR5IiwiX19tZXRhZGF0YSIsImsiLCJ2IiwibWV0YWRhdGEiLCJyb3V0ZXJfMSIsInJlcXVpcmUiLCJjb3JlXzEiLCJodHRwXzEiLCJhbmd1bGFyMl9tb21lbnRfMSIsImluZGV4X3NlcnZpY2VfMSIsIm1ldGFfc2VydmljZV8xIiwibGFiZWxfc2VydmljZV8xIiwiVGFnQ29tcG9uZW50IiwiX3JvdXRlciIsIl9yb3V0ZSIsIl9pbmRleFNlcnZpY2UiLCJfbWV0YVNlcnZpY2UiLCJfbGFiZWxTZXJ2aWNlIiwicG9zdHMiLCJ0YWciLCJzbmFwc2hvdCIsInBhcmFtcyIsInNldERhdGEiLCJ0aXRsZSIsInVybCIsInByb3RvdHlwZSIsImFjdGlvbk5hdmlnYXRlIiwicG9zdCIsIm5hdmlnYXRlIiwibGFiZWwiLCJwYXRoIiwibGFiZWxuaXplIiwidXBwZXJjYXNlIiwibmdPbkluaXQiLCJfdGhpcyIsImZldGNoIiwibWFwIiwicmVzIiwianNvbiIsInN1YnNjcmliZSIsInNpbXBsaWZ5Iiwic2VhcmNoIiwiQ29tcG9uZW50IiwibW9kdWxlSWQiLCJtb2R1bGUiLCJpZCIsInNlbGVjdG9yIiwidGVtcGxhdGVVcmwiLCJkaXJlY3RpdmVzIiwiUk9VVEVSX0RJUkVDVElWRVMiLCJwcm92aWRlcnMiLCJJbmRleFNlcnZpY2UiLCJMYWJlbFNlcnZpY2UiLCJIVFRQX1BST1ZJREVSUyIsInBpcGVzIiwiVGltZUFnb1BpcGUiLCJSb3V0ZXIiLCJBY3RpdmF0ZWRSb3V0ZSIsIk1ldGFTZXJ2aWNlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFDQSxJQUFJQSxZQUFjQyxNQUFRQSxLQUFLRCxZQUFlLFNBQVVFLEVBQVlDLEVBQVFDLEVBQUtDLEdBQzdFLEdBQTJIQyxHQUF2SEMsRUFBSUMsVUFBVUMsT0FBUUMsRUFBSUgsRUFBSSxFQUFJSixFQUFrQixPQUFURSxFQUFnQkEsRUFBT00sT0FBT0MseUJBQXlCVCxFQUFRQyxHQUFPQyxDQUNySCxJQUF1QixnQkFBWlEsVUFBb0Qsa0JBQXJCQSxTQUFRQyxTQUF5QkosRUFBSUcsUUFBUUMsU0FBU1osRUFBWUMsRUFBUUMsRUFBS0MsT0FDcEgsS0FBSyxHQUFJVSxHQUFJYixFQUFXTyxPQUFTLEVBQUdNLEdBQUssRUFBR0EsS0FBU1QsRUFBSUosRUFBV2EsTUFBSUwsR0FBS0gsRUFBSSxFQUFJRCxFQUFFSSxHQUFLSCxFQUFJLEVBQUlELEVBQUVILEVBQVFDLEVBQUtNLEdBQUtKLEVBQUVILEVBQVFDLEtBQVNNLEVBQ2hKLE9BQU9ILEdBQUksR0FBS0csR0FBS0MsT0FBT0ssZUFBZWIsRUFBUUMsRUFBS00sR0FBSUEsR0FFNURPLFdBQWNoQixNQUFRQSxLQUFLZ0IsWUFBZSxTQUFVQyxFQUFHQyxHQUN2RCxHQUF1QixnQkFBWk4sVUFBb0Qsa0JBQXJCQSxTQUFRTyxTQUF5QixNQUFPUCxTQUFRTyxTQUFTRixFQUFHQyxJQUV0R0UsU0FBV0MsUUFBUSxtQkFDbkJDLE9BQVNELFFBQVEsaUJBQ2pCRSxPQUFTRixRQUFRLGlCQUNqQkcsa0JBQW9CSCxRQUFRLG1CQUM1QkksZ0JBQWtCSixRQUFRLDZCQUMxQkssZUFBaUJMLFFBQVEsNEJBQ3pCTSxnQkFBa0JOLFFBQVEsNkJBQzFCTyxhQUFnQixXQUNoQixRQUFTQSxHQUFhQyxFQUFTQyxFQUFRQyxFQUFlQyxFQUFjQyxHQUNoRWpDLEtBQUs2QixRQUFVQSxFQUNmN0IsS0FBSzhCLE9BQVNBLEVBQ2Q5QixLQUFLK0IsY0FBZ0JBLEVBQ3JCL0IsS0FBS2dDLGFBQWVBLEVBQ3BCaEMsS0FBS2lDLGNBQWdCQSxFQUNyQmpDLEtBQUtrQyxTQUNMbEMsS0FBS21DLElBQU0sR0FDWG5DLEtBQUttQyxJQUFNbkMsS0FBSzhCLE9BQU9NLFNBQVNDLE9BQVksSUFDNUNMLEVBQWFNLFNBQVVDLE1BQU92QyxLQUFLbUMsSUFBS0ssSUFBSyxRQUFVeEMsS0FBS21DLE1BK0JoRSxNQTdCQVAsR0FBYWEsVUFBVUMsZUFBaUIsU0FBVUMsR0FBUTNDLEtBQUs2QixRQUFRZSxVQUFVLElBQU1ELEVBQUtFLE1BQVEsSUFBTUYsRUFBS0csUUFDL0dsQixFQUFhYSxVQUFVTSxVQUFZLFNBQVVGLEVBQU9HLEdBQWEsTUFBT2hELE1BQUtpQyxjQUFjYyxVQUFVRixFQUFPRyxJQUM1R3BCLEVBQWFhLFVBQVVRLFNBQVcsV0FDOUIsR0FBSUMsR0FBUWxELElBQ1pBLE1BQUsrQixjQUFjb0IsUUFDZEMsSUFBSSxTQUFVQyxHQUFPLE1BQU9BLEdBQUlDLFNBQ2hDQyxVQUFVLFNBQVVGLEdBQ3JCSCxFQUFNaEIsTUFBUWdCLEVBQU1uQixjQUFjeUIsU0FBU04sRUFBTW5CLGNBQWMwQixPQUFPSixFQUFLSCxFQUFNZixLQUFNLFNBQVMsT0FHeEdQLEVBQWU3QixZQUNYdUIsT0FBT29DLFdBQ0hDLFNBQVVDLE9BQU9DLEdBQ2pCQyxTQUFVLE1BQ1ZDLFlBQWEscUNBQ2JDLFlBQ0k1QyxTQUFTNkMsbUJBRWJDLFdBQ0l6QyxnQkFBZ0IwQyxhQUNoQnhDLGdCQUFnQnlDLGFBQ2hCN0MsT0FBTzhDLGdCQUVYQyxPQUNJOUMsa0JBQWtCK0MsZUFHMUJ2RCxXQUFXLHFCQUFzQkksU0FBU29ELE9BQVFwRCxTQUFTcUQsZUFBZ0JoRCxnQkFBZ0IwQyxhQUFjekMsZUFBZWdELFlBQWEvQyxnQkFBZ0J5QyxnQkFDdEp4QyxLQUdQK0MsU0FBUS9DLGFBQWVBIiwiZmlsZSI6ImNvbXBvbmVudHMvdGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xudmFyIF9fbWV0YWRhdGEgPSAodGhpcyAmJiB0aGlzLl9fbWV0YWRhdGEpIHx8IGZ1bmN0aW9uIChrLCB2KSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKGssIHYpO1xufTtcbnZhciByb3V0ZXJfMSA9IHJlcXVpcmUoJ0Bhbmd1bGFyL3JvdXRlcicpO1xudmFyIGNvcmVfMSA9IHJlcXVpcmUoJ0Bhbmd1bGFyL2NvcmUnKTtcbnZhciBodHRwXzEgPSByZXF1aXJlKCdAYW5ndWxhci9odHRwJyk7XG52YXIgYW5ndWxhcjJfbW9tZW50XzEgPSByZXF1aXJlKCdhbmd1bGFyMi1tb21lbnQnKTtcbnZhciBpbmRleF9zZXJ2aWNlXzEgPSByZXF1aXJlKCcuLi9zZXJ2aWNlcy9pbmRleC5zZXJ2aWNlJyk7XG52YXIgbWV0YV9zZXJ2aWNlXzEgPSByZXF1aXJlKCcuLi9zZXJ2aWNlcy9tZXRhLnNlcnZpY2UnKTtcbnZhciBsYWJlbF9zZXJ2aWNlXzEgPSByZXF1aXJlKCcuLi9zZXJ2aWNlcy9sYWJlbC5zZXJ2aWNlJyk7XG52YXIgVGFnQ29tcG9uZW50ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUYWdDb21wb25lbnQoX3JvdXRlciwgX3JvdXRlLCBfaW5kZXhTZXJ2aWNlLCBfbWV0YVNlcnZpY2UsIF9sYWJlbFNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5fcm91dGVyID0gX3JvdXRlcjtcbiAgICAgICAgdGhpcy5fcm91dGUgPSBfcm91dGU7XG4gICAgICAgIHRoaXMuX2luZGV4U2VydmljZSA9IF9pbmRleFNlcnZpY2U7XG4gICAgICAgIHRoaXMuX21ldGFTZXJ2aWNlID0gX21ldGFTZXJ2aWNlO1xuICAgICAgICB0aGlzLl9sYWJlbFNlcnZpY2UgPSBfbGFiZWxTZXJ2aWNlO1xuICAgICAgICB0aGlzLnBvc3RzID0gW107XG4gICAgICAgIHRoaXMudGFnID0gXCJcIjtcbiAgICAgICAgdGhpcy50YWcgPSB0aGlzLl9yb3V0ZS5zbmFwc2hvdC5wYXJhbXNbXCJ0YWdcIl07XG4gICAgICAgIF9tZXRhU2VydmljZS5zZXREYXRhKHsgdGl0bGU6IHRoaXMudGFnLCB1cmw6IFwiL3RhZy9cIiArIHRoaXMudGFnIH0pO1xuICAgIH1cbiAgICBUYWdDb21wb25lbnQucHJvdG90eXBlLmFjdGlvbk5hdmlnYXRlID0gZnVuY3Rpb24gKHBvc3QpIHsgdGhpcy5fcm91dGVyLm5hdmlnYXRlKFsnLycgKyBwb3N0LmxhYmVsICsgXCIvXCIgKyBwb3N0LnBhdGhdKTsgfTtcbiAgICBUYWdDb21wb25lbnQucHJvdG90eXBlLmxhYmVsbml6ZSA9IGZ1bmN0aW9uIChsYWJlbCwgdXBwZXJjYXNlKSB7IHJldHVybiB0aGlzLl9sYWJlbFNlcnZpY2UubGFiZWxuaXplKGxhYmVsLCB1cHBlcmNhc2UpOyB9O1xuICAgIFRhZ0NvbXBvbmVudC5wcm90b3R5cGUubmdPbkluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuX2luZGV4U2VydmljZS5mZXRjaCgpXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChyZXMpIHsgcmV0dXJuIHJlcy5qc29uKCk7IH0pXG4gICAgICAgICAgICAuc3Vic2NyaWJlKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgIF90aGlzLnBvc3RzID0gX3RoaXMuX2luZGV4U2VydmljZS5zaW1wbGlmeShfdGhpcy5faW5kZXhTZXJ2aWNlLnNlYXJjaChyZXMsIF90aGlzLnRhZywgW1widGFnc1wiXSwgZmFsc2UpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBUYWdDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgY29yZV8xLkNvbXBvbmVudCh7XG4gICAgICAgICAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxuICAgICAgICAgICAgc2VsZWN0b3I6ICd0YWInLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvZGlzdC9hcHAvdmlld3MvdGFnLmNvbXBvbmVudC5odG1sJyxcbiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICByb3V0ZXJfMS5ST1VURVJfRElSRUNUSVZFU1xuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIGluZGV4X3NlcnZpY2VfMS5JbmRleFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgbGFiZWxfc2VydmljZV8xLkxhYmVsU2VydmljZSxcbiAgICAgICAgICAgICAgICBodHRwXzEuSFRUUF9QUk9WSURFUlNcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBwaXBlczogW1xuICAgICAgICAgICAgICAgIGFuZ3VsYXIyX21vbWVudF8xLlRpbWVBZ29QaXBlXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pLCBcbiAgICAgICAgX19tZXRhZGF0YSgnZGVzaWduOnBhcmFtdHlwZXMnLCBbcm91dGVyXzEuUm91dGVyLCByb3V0ZXJfMS5BY3RpdmF0ZWRSb3V0ZSwgaW5kZXhfc2VydmljZV8xLkluZGV4U2VydmljZSwgbWV0YV9zZXJ2aWNlXzEuTWV0YVNlcnZpY2UsIGxhYmVsX3NlcnZpY2VfMS5MYWJlbFNlcnZpY2VdKVxuICAgIF0sIFRhZ0NvbXBvbmVudCk7XG4gICAgcmV0dXJuIFRhZ0NvbXBvbmVudDtcbn0oKSk7XG5leHBvcnRzLlRhZ0NvbXBvbmVudCA9IFRhZ0NvbXBvbmVudDtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
