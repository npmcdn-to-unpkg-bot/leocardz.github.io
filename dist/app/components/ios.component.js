"use strict";var __decorate=this&&this.__decorate||function(e,t,r,i){var o,a=arguments.length,n=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,r,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(n=(a<3?o(n):a>3?o(t,r,n):o(t,r))||n);return a>3&&n&&Object.defineProperty(t,r,n),n},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},router_1=require("@angular/router"),core_1=require("@angular/core"),http_1=require("@angular/http"),angular2_moment_1=require("angular2-moment"),index_service_1=require("../services/index.service"),meta_service_1=require("../services/meta.service"),IOSComponent=function(){function e(e,t,r,i){this._metaService=e,this._router=t,this._route=r,this._indexService=i,this.params={},this.title="iOS",this.label="ios",this.posts=[],this.params=this._route.snapshot.params}return e.prototype.actionNavigate=function(e){this._router.navigate(["/"+e.label+"/"+e.path])},e.prototype.ngOnInit=function(){var e=this;void 0!==this.params.post?this._indexService.getPost(this.label,this.params.post).subscribe(function(t){var r=t[0],i=t[1];console.log(r),console.log(i._body),e._metaService.setData({title:r.title,description:r.content,image:"/"+e.label+"/"+r.path+"/"+r.image,url:"/"+e.label+"/"+r.path})},function(t){return e._router.navigate(["/not-found"])}):(this._metaService.setData({title:this.title,url:"/"+this.label}),this._indexService.fetch().map(function(e){return e.json()}).subscribe(function(t){e.posts=e._indexService.search(t,e.label,["label"],!1)}))},e=__decorate([core_1.Component({moduleId:module.id,selector:"ios",templateUrl:"/dist/app/views/ios.component.html",directives:[router_1.ROUTER_DIRECTIVES],providers:[index_service_1.IndexService,http_1.HTTP_PROVIDERS],pipes:[angular2_moment_1.TimeAgoPipe]}),__metadata("design:paramtypes",[meta_service_1.MetaService,router_1.Router,router_1.ActivatedRoute,index_service_1.IndexService])],e)}();exports.IOSComponent=IOSComponent;
//# sourceMappingURL=data:application/json;base64,
